-- criacao tabelas origem
-- Criação da tabela de Pedidos
CREATE TABLE Pedidos (
    pedido_id INT PRIMARY KEY,
    data_pedido DATE,
    cliente_id INT,
    centro_saida_id INT,
    centro_destino_id INT,
    quantidade INT,
    valor_total DECIMAL(10, 2)
);

-- Inserção de dados na tabela Pedidos
INSERT INTO Pedidos (pedido_id, data_pedido, cliente_id, centro_saida_id, centro_destino_id, quantidade, valor_total)
VALUES
    (1, '2024-11-01', 101, 1, 2, 5, 250.00),
    (2, '2024-11-02', 102, 2, 3, 3, 150.00),
    (3, '2024-11-03', 103, 1, 3, 10, 500.00);

-- Criação da tabela de Clientes
CREATE TABLE Clientes (
    cliente_id INT PRIMARY KEY,
    nome VARCHAR(100),
    endereco VARCHAR(200),
    cidade VARCHAR(50),
    estado VARCHAR(50)
);

-- Inserção de dados na tabela Clientes
INSERT INTO Clientes (cliente_id, nome, endereco, cidade, estado)
VALUES
    (101, 'João Silva', 'Rua A, 123', 'São Paulo', 'SP'),
    (102, 'Maria Oliveira', 'Rua B, 456', 'Rio de Janeiro', 'RJ'),
    (103, 'Carlos Souza', 'Rua C, 789', 'Belo Horizonte', 'MG');

-- Criação da tabela de Centros de Distribuição
CREATE TABLE Centros (
    centro_id INT PRIMARY KEY,
    nome VARCHAR(100),
    endereco VARCHAR(200),
    cidade VARCHAR(50),
    estado VARCHAR(50)
);

-- Inserção de dados na tabela Centros
INSERT INTO Centros (centro_id, nome, endereco, cidade, estado)
VALUES
    (1, 'Centro SP', 'Av. Paulista, 1000', 'São Paulo', 'SP'),
    (2, 'Centro RJ', 'Av. Rio, 2000', 'Rio de Janeiro', 'RJ'),
    (3, 'Centro BH', 'Av. Belo Horizonte, 3000', 'Belo Horizonte', 'MG');

-- Criação da tabela de Entregas
CREATE TABLE Entregas (
    entrega_id INT PRIMARY KEY,
    pedido_id INT,
    data_saida DATE,
    data_chegada DATE,
    quilometragem INT
);

-- Inserção de dados na tabela Entregas
INSERT INTO Entregas (entrega_id, pedido_id, data_saida, data_chegada, quilometragem)
VALUES
    (1, 1, '2024-11-02', '2024-11-03', 400),
    (2, 2, '2024-11-03', '2024-11-04', 600),
    (3, 3, '2024-11-04', '2024-11-05', 500);





-- criação das tabelas do dw

CREATE SEQUENCE public.dim_cliente_sk_cliente_seq;

CREATE TABLE public.dim_cliente (
                sk_cliente INTEGER NOT NULL DEFAULT nextval('public.dim_cliente_sk_cliente_seq'),
                cliente_id VARCHAR NOT NULL,
                nome VARCHAR NOT NULL,
                endereco VARCHAR NOT NULL,
                cidade VARCHAR NOT NULL,
                estado VARCHAR NOT NULL,
                data_ini DATE NOT NULL,
                data_fim DATE NOT NULL,
                situacao BOOLEAN NOT NULL,
                CONSTRAINT cliente_sk PRIMARY KEY (sk_cliente)
);


ALTER SEQUENCE public.dim_cliente_sk_cliente_seq OWNED BY public.dim_cliente.sk_cliente;

CREATE SEQUENCE public.entragas1_fato_entregas1_sk_seq;

CREATE SEQUENCE public.entragas1_fato_entrega1_id_seq;

CREATE TABLE public.entragas1_fato (
                entregas1_sk INTEGER NOT NULL DEFAULT nextval('public.entragas1_fato_entregas1_sk_seq'),
                entrega1_id INTEGER NOT NULL DEFAULT nextval('public.entragas1_fato_entrega1_id_seq'),
                pedido_id VARCHAR NOT NULL,
                id_data_saida INTEGER NOT NULL,
                id_data_chegada INTEGER NOT NULL,
                id_dt_pedido INTEGER NOT NULL,
                quilometragem INTEGER NOT NULL,
                centro_saida_id VARCHAR NOT NULL,
                centro_destino_id VARCHAR NOT NULL,
                quantidade INTEGER NOT NULL,
                valor_total INTEGER NOT NULL,
                sk_cliente INTEGER NOT NULL,
                CONSTRAINT entregas1_fato_sk PRIMARY KEY (entregas1_sk)
);


ALTER SEQUENCE public.entragas1_fato_entregas1_sk_seq OWNED BY public.entragas1_fato.entregas1_sk;

ALTER SEQUENCE public.entragas1_fato_entrega1_id_seq OWNED BY public.entragas1_fato.entrega1_id;

CREATE SEQUENCE public.dim_tempo_tempo_sk_seq;

CREATE TABLE public.dim_tempo (
                tempo_sk INTEGER NOT NULL DEFAULT nextval('public.dim_tempo_tempo_sk_seq'),
                data DATE NOT NULL,
                CONSTRAINT tempo_sk PRIMARY KEY (tempo_sk)
);


ALTER SEQUENCE public.dim_tempo_tempo_sk_seq OWNED BY public.dim_tempo.tempo_sk;

CREATE SEQUENCE public.dim_centro_cd_sk_seq;

CREATE SEQUENCE public.dim_centro_centro_id_seq;

CREATE TABLE public.dim_centro (
                cd_sk INTEGER NOT NULL DEFAULT nextval('public.dim_centro_cd_sk_seq'),
                centro_id INTEGER NOT NULL DEFAULT nextval('public.dim_centro_centro_id_seq'),
                nome VARCHAR(255) NOT NULL,
                endereco VARCHAR(255) NOT NULL,
                cidade VARCHAR(255) NOT NULL,
                estado VARCHAR(255) NOT NULL,
                entregas1_sk INTEGER NOT NULL,
                ativo BOOLEAN NOT NULL,
                CONSTRAINT centro_sk PRIMARY KEY (cd_sk)
);

-- insercao nas tabelas do dw

-- Inserir dados na tabela dim_cliente 
INSERT INTO public.dim_cliente (cliente_id, nome, endereco, cidade, estado, data_ini, data_fim, situacao)
SELECT 
    c.cliente_id,
    c.nome,
    c.endereco,
    c.cidade,
    c.estado,
    '2024-01-01' AS data_ini,
    '9999-12-31' AS data_fim,  
    TRUE AS situacao           
FROM 
    Clientes c;

-- Inserir dados na tabela dim_centro 
INSERT INTO public.dim_centro (centro_id, nome, endereco, cidade, estado, entregas1_sk, ativo)
SELECT 
    ce.centro_id,
    ce.nome,
    ce.endereco,
    ce.cidade,
    ce.estado,
    1 AS entregas1_sk,  
    TRUE AS ativo
FROM 
    Centros ce;

-- Inserir dados na tabela dim_tempo 
INSERT INTO public.dim_tempo (data)
SELECT DISTINCT data_pedido FROM Pedidos
UNION
SELECT DISTINCT data_saida FROM Entregas
UNION
SELECT DISTINCT data_chegada FROM Entregas;

INSERT INTO public.entragas1_fato (pedido_id, id_data_saida, id_data_chegada, id_dt_pedido, quilometragem, centro_saida_id, centro_destino_id, quantidade, valor_total, sk_cliente)
SELECT 
    e.pedido_id,
    t_saida.tempo_sk,
    t_chegada.tempo_sk,
    t_pedido.tempo_sk,
    e.quilometragem,
    pc.centro_id,
    pc.centro_id,
    p.quantidade,
    p.valor_total,
    c.cliente_id
FROM 
    Pedidos p
left join Entregas e ON p.pedido_id = e.pedido_id
left join public.dim_tempo t_saida ON CAST(e.data_saida AS DATE) = t_saida.data
left join public.dim_tempo t_chegada ON CAST(e.data_chegada AS DATE) = t_chegada.data 
left join public.dim_tempo t_pedido ON CAST(p.data_pedido AS DATE) = t_pedido.data
left join public.centros pc on p.centro_saida_id = pc.centro_id
left join public.clientes c on p.cliente_id = c.cliente_id
;




-- respostas
-- Métricas aditivas
-- quantidade de produtos entregues
select sum(quantidade) from entragas1_fato;

-- tempo total de entrega
select 
    e.pedido_id,
    (t_chegada.data - t_saida.data) AS "tempo total de entrega"
from public.entragas1_fato e
left join public.dim_tempo t_saida ON e.id_data_saida = t_saida.tempo_sk
left join public.dim_tempo t_chegada ON e.id_data_chegada = t_chegada.tempo_sk;

   
   
-- Metricas não aditivas
-- custo medio por km
select (sum(quilometragem))/(sum(valor_total))
from entragas1_fato;


-- tempo medio de entrega
select  
     avg(t_chegada.data - t_saida.data) AS "tempo total de entrega"
from public.entragas1_fato e
left join public.dim_tempo t_saida ON e.id_data_saida = t_saida.tempo_sk
left join public.dim_tempo t_chegada ON e.id_data_chegada = t_chegada.tempo_sk;
